package QueueDS;

//USING 1 POINTER

public class Queue {
	
	int[] queue ;
	int defaultsize = 10;
	
	
	int end = -1;
	
	
	//constructor
	
	//WHEN YOU DONT PASS SIZE 
	public Queue() {
		
		this.queue=new int[defaultsize];
		
	}
	
	
	
	Queue(int size){
		
		this.queue = new int[size];
		
	}
	
	public void insert(int item) {
		
		if(end == queue.length-1)
			System.out.println("Queue is full");
		
		
		end++;
		
		queue[end]=item;
		
		System.out.println("Queue after insert");
		
		display();
		
		
	}
	
	public void remove() {
		
		if(end == -1)
			System.out.println("Queue is empty");
		
		
		
		
	
		
		for( int i=1;i<=end;i++) {
			
			 queue[i-1] = queue[i];
			 
		}
		
	//	System.out.println("Removed item is "+queue[end]);
		
		end--;
		
		System.out.println("Queue after removing item");
		display();
		
	}
	
	public void display() {
		
		
		
     	for(int index=0; index<=end;index++) {
		
			System.out.println(queue[index]);
			
		}
		
		
		
	}
	

	public static void main(String[] args) {
		
		//Queue q = new Queue(5);
		Queue q = new Queue();
		
		q.insert(50);
		q.insert(5);
		q.insert(88);
		q.insert(6);
		q.insert(8);
	//	q.insert(4);//QUEUE IS FULL

		
		q.remove();
		q.remove();
		q.remove();
		q.remove();
		q.remove();
	//	q.remove();//Queue is empty
	}

}
