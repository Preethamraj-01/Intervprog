/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        
        
        
        if(head ==null || head.next==null)
            return head;
         
        ListNode node = head;
        ListNode prev = head;
        ListNode rig = head;
        
        while(left>1){
            
            prev=prev.next;
            left--;
        }
        
         while(right>1){
            
            rig=rig.next;
            right--;
        }
        
        
        ListNode present = prev.next;
        ListNode temp = prev.next.next;
        
        
        while(node.next!=prev && prev!=head){
            node=node.next;
            
        }
        
        node.next = rig;
        prev.next=rig.next;
        
        while(prev != rig){ 
        
        present.next=prev;
        prev=present;
        if(present.next!=null)
        present=temp;
        
    }
    
    
    
   return head; 
}
}